<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:cluster="http://www.mulesoft.org/schema/mule/ee/cluster" xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:context="http://www.springframework.org/schema/context" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-current.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd">
    <context:property-placeholder location="app-${env}.properties"/>
    <http:request-config name="HTTP_Request_Configuration_cust_sys" host="${cust_host}" port="${cust_port}" basePath="${cust_base}" doc:name="HTTP Request Configuration"/>
    <configuration defaultExceptionStrategy-ref="globalexceptionCatch_Exception_Strategy" doc:name="Configuration">
        <http:config useTransportForUris="false"/>
    </configuration>
<catch-exception-strategy name="globalexceptionCatch_Exception_Strategy">
        <byte-array-to-object-transformer doc:name="Byte Array to Object"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <set-property propertyName="http.status" value="500" doc:name="Property"/>
        <logger level="INFO" doc:name="Logger" message="payload at exception--&gt; #[payload]"/>
        <choice doc:name="Choice">
            <when expression="payload.contains(&quot;message&quot;)">
                <set-payload value="{
&quot;message&quot;:&quot;#[payload.split(&quot;message\&quot;:\&quot;&quot;)[1].split(&quot;\&quot;&quot;)[0]]&quot;
}" mimeType="application/json" doc:name="Set Payload"/>
                <logger level="INFO" doc:name="Logger"/>
            </when>
            <otherwise>
                <set-payload value="{&quot;message&quot;:#[payload]}" doc:name="Set Payload"/>
                <logger message="#[payload]" level="INFO" doc:name="Logger"/>
            </otherwise>
        </choice>
    </catch-exception-strategy>
</mule>
